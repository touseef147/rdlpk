<?php

namespace app\models\application;

use Yii;

/**
 * This is the model class for table "property_application_comments".
 *
 * @property string $comment_id
 * @property integer $application_id
 * @property string $comments
 * @property integer $user_id
 * @property string $date
 * @property integer $generated_by
 * @property integer $comment_type
 * @property string $ip_address
 * @property integer $parent_id
 */
class Propertyapplicationcomments extends \yii\db\ActiveRecord {

    /**
     * @inheritdoc
     */
    public static function tableName() {
        return 'property_application_comments';
    }

    /**
     * @inheritdoc
     */
    public function rules() {
        return [
            [['application_id', 'comments', 'user_id', 'date', 'generated_by', 'comment_type', 'ip_address'], 'required'],
            [['application_id', 'user_id', 'generated_by', 'comment_type', 'parent_id'], 'integer'],
            [['date', 'location'], 'safe'],
            [['comments'], 'string', 'max' => 1000],
                //[['ip_address'], 'string', 'max' => 10]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels() {
        return [
            'comment_id' => 'Comment ID',
            'application_id' => 'Application ID',
            'comments' => 'Comments',
            'user_id' => 'User ID',
            'date' => 'Date',
            'generated_by' => 'Generated By',
            'comment_type' => 'Category',
            'ip_address' => 'Location',
            'parent_id' => 'Reply of',
            'location' => 'City',
        ];
    }

    /* PROPERTIES */

    public function getGeneratedbytitle() {
        if ($this->generated_by == 0)
            return "User";
        else
            return "System";
    }

    public function getCommenttypetitle() {
        if ($this->comment_type == 1)
            return "Process";
        elseif ($this->comment_type == 2)
            return "Printing";
        elseif ($this->comment_type == 3)
            return "Other";
        else {
            return "";
        }
    }

    /* END OF PROPERTIES */

    /* RELATIONS */

    public function getParent() {
        return $this->hasOne(Propertyapplicationcomments::className(), ['parent_id' => 'comment_id']);
    }

    public function getUser() {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }

    public function getApplication() {
        return $this->hasOne(Propertyapplication::className(), ['application_id' => 'application_id']);
    }

    /* END OF RELATIONS */

    public static function url_get_contents($Url) {
        if (!function_exists('curl_init')) {
            echo 'CURL is not installed!';
            return "";
        }
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $Url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        $output = curl_exec($ch);
        curl_close($ch);
        return $output;
    }

    public function updaterecord() {
        date_default_timezone_set('Asia/Karachi');

        $this->date = date("Y-m-d h:i:s");
        $this->user_id = Yii::$app->user->identity->id;
        $this->ip_address = getenv('REMOTE_ADDR'); //$_SERVER['REMOTE_ADDR'];
        $this->comment_type = 3;

        if (strpos($this->ip_address, ":") === false) {
            $details = json_decode(Propertyapplicationcomments::url_get_contents("http://ipinfo.io/{$this->ip_address}/json"));
            //echo $details;
            //print_r($details);
            //$details = json_decode(file_get_contents("http://ipinfo.io/{$this->ip_address}/json"));
            //print_r($details);
            if(isset($details) && isset($details->city))
                $this->location = $details->city . ", " . $details->country;
            //echo $location;
        } else {
            $this->location = "---";
        }

        if ($this->save()) {
            return TRUE;
        }
        if (Yii::$app->user->identity->rawerrors == 1) {
            echo "<h3>" . $this->className() . " Model: updaterecord</h3>";
            print_r($this->errors);
        }

        return FALSE;
    }

    public function updaterecordauto() {
        date_default_timezone_set('Asia/Karachi');

        $this->date = date("Y-m-d h:i:s");
        $this->user_id = Yii::$app->user->identity->id;
        $this->ip_address = getenv('REMOTE_ADDR'); //$_SERVER['REMOTE_ADDR'];
        //$this->comment_type= 3;

        if ($this->save()) {
            return TRUE;
        }
        if (Yii::$app->user->identity->rawerrors == 1) {
            echo "<h3>" . $this->className() . " Model: updaterecordauto</h3>";
            print_r($this->errors);
        }

        return FALSE;
    }

    public static function updatesystemcomments($comment, $commenttype, $parentid) {
        date_default_timezone_set('Asia/Karachi');

        $history = new Propertyapplicationcomments();
        $history->date = date("Y-m-d h:i:s");
        $history->user_id = Yii::$app->user->identity->id;
        $history->ip_address = getenv('REMOTE_ADDR'); //$_SERVER['REMOTE_ADDR'];
        //$history->comment_type= 3;
        $history->generated_by = 1;
        $history->application_id = $parentid;
        $history->comments = $comment;
        $history->comment_type = $commenttype;

        if (strpos($history->ip_address, ":") === false) {
            $details = json_decode(Propertyapplicationcomments::url_get_contents("http://ipinfo.io/{$history->ip_address}/json"));
            //print_r($details);
//            $details = json_decode($this->url_get_contents("http://ipinfo.io/{$this->ip_address}/json"));
//            ini_set('allow_url_fopen', 1);
            //          $details = json_decode(file_get_contents("http://ipinfo.io/{$history->ip_address}/json"));
            if (isset($details) && isset($details->city) && isset($details->country)) {
                $history->location = $details->city . ", " . $details->country;
            }
            //echo $location;
            //          $history->location = "---";
        } else {
            $history->location = "---";
        }

        if ($history->save()) {
            return TRUE;
        }
        if (Yii::$app->user->identity->rawerrors == 1) {
            echo "<h3>" . $history->className() . " Model: updatesystemcomments</h3>";
            print_r($history->errors);
            
        }

        return FALSE;
    }

}
